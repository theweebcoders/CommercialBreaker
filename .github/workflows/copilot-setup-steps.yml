name: "Copilot Setup Steps"
on: workflow_dispatch

jobs:
  copilot-setup-steps:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Use Python 3.10 so that 'cgi' isnâ€™t deprecated yet.
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Pin setuptools to <81 so pkg_resources warnings go away,
      # and upgrade pip, wheel, build.
      - name: Upgrade pip and pin setuptools
        run: |
          python -m pip install --upgrade pip
          pip install "setuptools<81" wheel build

      - name: Install pre-dependencies
        run: pip install -r requirements/pre_deps.txt

      - name: Install m3u8 early for build
        run: pip install m3u8

      # Generate a minimal setup.py on the fly so pip can install the project directory
      - name: Create minimal setup.py
        run: |
          cat << 'EOF' > setup.py
          from setuptools import setup, find_packages

          setup(
            name="commercialbreaker",
            version="0.1.0",
            packages=find_packages(),
          )
          EOF

      # Now pip can install the root directory as a package
      - name: Install your project with no build isolation
        run: pip install --no-build-isolation .

      - name: Install runtime dependencies
        run: pip install -r requirements/runtime.txt

      - name: Install graphics dependencies
        run: pip install -r requirements/graphics.txt

      - name: Install headless dependencies (optional, if needed)
        run: pip install -r requirements/headless.txt

      - name: Install main requirements (this will handle -r includes cleanly)
        run: pip install -r requirements.txt

      - name: Install test dependencies
        run: pip install -r requirements/tests.txt
        
      - name: Copy example-config.py to config.py
        run: cp example-config.py config.py
        
      - name: Run cutless checkbox tests
        run: pytest test_cutless_checkbox.py
