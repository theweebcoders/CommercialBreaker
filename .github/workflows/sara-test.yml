name: "CI: S.A.R.A. Automatic Validation"
on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  copilot-setup-steps:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Use Python 3.10 so that 'cgi' isn’t deprecated yet.
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Pin setuptools to <81 so pkg_resources warnings go away,
      # and upgrade pip, wheel, build.
      - name: Upgrade pip and pin setuptools
        run: |
          python -m pip install --upgrade pip
          pip install "setuptools<81" wheel build

      - name: Install pre-dependencies
        run: pip install -r requirements/pre_deps.txt

      - name: Install m3u8 early for build
        run: pip install m3u8

      # Generate a minimal setup.py on the fly so pip can install the project directory
      - name: Create minimal setup.py
        run: |
          cat << 'EOF' > setup.py
          from setuptools import setup, find_packages

          setup(
            name="commercialbreaker",
            version="0.1.0",
            packages=find_packages(),
          )
          EOF

      # Now pip can install the root directory as a package
      - name: Install your project with no build isolation
        run: pip install --no-build-isolation .

      - name: Install runtime dependencies
        run: pip install -r requirements/runtime.txt

      - name: Install graphics dependencies
        run: pip install -r requirements/graphics.txt

      - name: Install headless dependencies (optional, if needed)
        run: pip install -r requirements/headless.txt

      - name: Install main requirements (this will handle -r includes cleanly)
        run: pip install -r requirements.txt

      - name: Install test dependencies
        run: pip install -r requirements/tests.txt

      - name: Copy example-config.py to config.py
        run: cp example-config.py config.py

      - name: Download sample fixture
        env:
          NC_USER: ${{ secrets.NEXTCLOUD_USER }}
          NC_PASS: ${{ secrets.NEXTCLOUD_APP_PASSWORD }}
          FILE_URL: ${{ secrets.NEXTCLOUD_FILE_URL }}
        run: |
          mkdir -p tests/fixtures
          curl -u "${NC_USER}:${NC_PASS}" -L "${FILE_URL}" \
               --output tests/fixtures/sample.txt

      - name: Run S.A.R.A. tests
        id: run-tests
        run: |
          pytest tests/test_sara_automatic.py --maxfail=1 --disable-warnings -v -s
        continue-on-error: true

      - name: Comment PR on failure
        if: steps.run-tests.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ❌ S.A.R.A. Tests Failed

              The automated tests did not pass. Please check the [workflow logs](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for details.

              **Required actions:**
              1. Run \`pytest tests/test_sara_automatic.py -v -s\` locally
              2. Fix any failing tests
              3. Push your fixes to update this PR

              Tests must pass before this PR can be merged.`
            })

      - name: Fail workflow if tests failed
        if: steps.run-tests.outcome == 'failure'
        run: exit 1